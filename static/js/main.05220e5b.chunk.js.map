{"version":3,"sources":["api.js","features/makeAirtableRequest.js","pages/subscribers/subscribersSlice.js","pages/mails/mailsSlice.js","components/snackBars/snackBarSlice.js","store.js","components/subscribers/elements/TextField.js","features/makeMailgunRequest.js","handlers.js","components/subscribers/elements/menuSubscribers.js","components/subscribers/elements/subscribersSkeleton.js","components/mailEditor.js","components/snackBars/index.js","components/dashboard/dashboard.js","components/subscribers/addSubscriber.js","components/mails/elements/checkAll.js","components/mails/elements/mailTrash.js","components/mails/elements/mailsSkeleton.js","components/subscribers/singleSubscriber/index.js","components/subscribers/subscribersList.js","components/mails/mailToSend.js","pages/subscribers/index.js","components/mails/singleMail.js","components/mails/mailsList.js","pages/mails/index.js","App.js","index.js"],"names":["defaultConfig","request","config","console","log","axios","then","resp","data","catch","err","message","response","error","store","dispatch","setError","Error","get","patch","headers","method","post","_delete","url","type","fetchData","createAsyncThunk","api","records","fetchSubscribers","subscribersAdapter","createEntityAdapter","sortComparer","a","b","createdTime","localeCompare","initialState","getInitialState","status","subscribersSlice","createSlice","name","reducers","updateSubscriber","state","payload","id","rest","updateOne","changes","_addSubscriber","addOne","_deleteSubscribers","removeMany","setStatusSubscr","extraReducers","pending","fulfilled","setAll","rejected","actions","getSelectors","subscribers","selectAll","selectById","fetchMails","mailsAdapter","openModal","mailsSlice","updateMail","deleteMails","addMail","setStatusMails","setStatusEditor","mails","selectAllMails","snackBarSlice","open","showSnack","hideSnack","configureStore","reducer","subscribersReducer","mailsReducer","snackBar","snackReducer","TextField","styled","control","rules","useController","defaultValue","field","ref","onChange","onBlur","value","fieldState","invalid","size","label","helperText","inputRef","inputProps","margin","theme","spacing","handleUpdate","baseURL","JSON","stringify","fields","update","finally","handleDelSelected","itemsID","length","confirm","params","deleteItems","map","subsc","mail","alert","handleAdd","addItem","handleSend","mailToSend","selectedSubscr","getState","Object","values","entities","find","subscr","filter","selected","sendTo","from","to","email","subject","text","content","replace","Promise","allSettled","res","sendMail","resSent","sentTo","_","num","join","dontSentTo","MenuSubscribers","selSubscr","useState","setOpen","Tooltip","title","IconButton","onClick","currentTarget","fontSize","Menu","anchorEl","onClose","MenuItem","dense","children","SubscribersSkeleton","Array","Math","floor","random","fill","elem","index","ListItem","Skeleton","variant","Avatar","Box","sx","flexGrow","ml","maxWidth","width","memo","connect","Boolean","useForm","defaultValues","mode","handleSubmit","reset","useEffect","onSubmit","innerText","target","respID","Modal","hideBackdrop","display","justifyContent","alignItems","backdropFilter","Zoom","in","timeout","Paper","p","pt","flexDirection","position","top","right","multiline","minRows","maxRows","required","validate","val","Stack","direction","Button","SnackBar","useSelector","useDispatch","transitionDuration","autoHideDuration","anchorOrigin","vertical","horizontal","Dashboard","pendingSubscr","pendingMails","className","Backdrop","CircularProgress","invisible","zIndex","AddSubscriber","isSubmitting","formState","noValidate","validator","isEmail","endIcon","CheckAll","ids","setStatus","Checkbox","indeterminate","checked","color","promises","itemId","all","prev","Trash","selectedMails","MailsSkeleton","component","height","mr","Subscriber","arr","divider","secondaryAction","edge","disabled","disablePadding","ListItemButton","ListItemText","ListItemAvatar","at","toUpperCase","primary","secondary","SubscribersList","List","ListSubheader","MailToSend","Card","alignSelf","CardHeader","titleTypographyProps","subheader","subheaderTypographyProps","CardContent","overflow","whiteSpace","textOverflow","CardActions","Edit","AddCircleOutline","Subscribers","openCollapse","setOpenCollapse","my","ExpandLess","ExpandMore","Collapse","SingleMail","mailStatus","navigate","useNavigate","ForwardToInboxOutlined","MailsList","Mails","paddingX","App","path","element","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.05220e5b.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport { setError } from \"./pages/subscribers/subscribersSlice\";\r\n// import qs from \"qs\";\r\nimport store from './store';\r\n\r\nconst defaultConfig = {\r\n  // headers: {\r\n  //   \"Content-Type\": \"application/json\"\r\n  // }\r\n};\r\n\r\nfunction request(config) {\r\n  console.log(\"config: \", config);\r\n  return axios(config)\r\n    .then((resp) => resp.data)\r\n    .catch((err) => {\r\n      let message;\r\n      if (err.response) {\r\n        console.error(\"err.response: \", err.response);\r\n        if (err.response.data.error) {\r\n          message = err.response.data.error.message;\r\n          // throw Error(err.response.data.error.message)\r\n        } else {\r\n          message = err.response.data?.message;\r\n          // throw Error(err.response.data?.message);\r\n        }\r\n      } else {\r\n        console.error(err);\r\n        message = err.message;\r\n      }\r\n      console.log(message);\r\n      store.dispatch(setError(message));\r\n      throw Error(message);\r\n    });\r\n}\r\nfunction get(config) {\r\n  return request(config);\r\n}\r\nfunction patch(config) {\r\n  config.headers = { ...config?.headers, ...defaultConfig?.headers };\r\n  return request({\r\n    ...config,\r\n    method: \"PATCH\",\r\n  });\r\n}\r\nfunction post(config) {\r\n  config.headers = { ...config?.headers, ...defaultConfig?.headers };\r\n  return request({\r\n    ...config,\r\n    method: \"POST\",\r\n  });\r\n}\r\nfunction _delete(config) {\r\n  // config.paramsSerializer = (params) =>\r\n  //   qs.stringify({ records: params }, { arrayFormat: \"brackets\" });\r\n  return request({\r\n    ...config,\r\n    method: \"DELETE\"\r\n  });\r\n}\r\n\r\nexport default { get, patch, post, _delete };\r\n","import { createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport api from \"../api\";\r\n// const airtableURL = \"https://api.airtable.com/v0/appF2X0Cfc7mAqbqX/subscribers/\";\r\n// const defaultConfig = {\r\n//   baseURL\r\n//   // headers: { Authorization: \"Bearer ... }\r\n// };\r\nconst subscribersURL = \"https://enuxp5t0vvqu400.m.pipedream.net\";\r\nconst mailsURL = \"https://enb5zkce5jncfjh.m.pipedream.net\";\r\nconst url = type => type === \"subscribers\" ? subscribersURL : mailsURL;\r\n\r\nexport const fetchData = type => createAsyncThunk(`fetch${type}`, () =>\r\n  api.get(url(type)).then((data) => data.records)\r\n);\r\n\r\nexport const update = type => (id, data) => {\r\n  const defaultConfig = {\r\n    baseURL: url(type),\r\n    headers: {\r\n      \"Content-type\": \"application/json\"\r\n    },\r\n    data: JSON.stringify({ ...{ fields: data }, id })\r\n  };\r\n  return api.patch(defaultConfig).then((data) => data);\r\n}\r\n\r\nexport const addItem = type => data => {\r\n  const defaultConfig = {\r\n    baseURL: url(type),\r\n    headers: {\r\n      \"Content-type\": \"application/json\"\r\n    },\r\n    data: JSON.stringify({ fields: data })\r\n  }\r\n  return api.post(defaultConfig).then((data) => data);\r\n}\r\n\r\nexport const deleteItems = type => data => {\r\n  const defaultConfig = {\r\n    baseURL: url(type),\r\n    headers: {\r\n      \"Content-type\": \"application/json\"\r\n    },\r\n    params: data\r\n  }\r\n  return api._delete(defaultConfig).then((data) => data.records);\r\n}\r\n","import { createEntityAdapter, createSlice } from \"@reduxjs/toolkit\";\r\nimport { fetchData } from \"../../features/makeAirtableRequest\";\r\n\r\nconst fetchSubscribers = fetchData(\"subscribers\");\r\n\r\nconst subscribersAdapter = createEntityAdapter({\r\n  sortComparer: (a, b) => a.createdTime.localeCompare(b.createdTime)\r\n});\r\nconst initialState = subscribersAdapter.getInitialState({\r\n  status: \"iddle\",\r\n  error: null\r\n});\r\nconst subscribersSlice = createSlice({\r\n  name: \"subscribers\",\r\n  initialState,\r\n  reducers: {\r\n    updateSubscriber: (state, { payload: { id, ...rest } }) => {\r\n      subscribersAdapter.updateOne(state, {\r\n        id,\r\n        changes: { ...rest }\r\n      });\r\n    },\r\n    _addSubscriber: (state, { payload }) =>\r\n      subscribersAdapter.addOne(state, payload),\r\n    _deleteSubscribers: (state, { payload }) =>\r\n      subscribersAdapter.removeMany(state, payload),\r\n    setStatusSubscr: (state, { payload }) => { state.status = payload },\r\n    setError: (state, { payload }) => { state.error = payload }\r\n  },\r\n  extraReducers: {\r\n    [fetchSubscribers.pending]: (state) => {\r\n      state.status = \"pending\";\r\n    },\r\n    [fetchSubscribers.fulfilled]: (state, { payload }) => {\r\n      state.status = \"iddle\";\r\n      subscribersAdapter.setAll(state, payload);\r\n    },\r\n    [fetchSubscribers.rejected]: (state, { error, payload }) => {\r\n      // console.log(error, payload);\r\n      state.status = \"failed\";\r\n      state.error = error.message;\r\n    }\r\n  }\r\n});\r\n\r\nexport const {\r\n  setStatusSubscr,\r\n  updateSubscriber,\r\n  _addSubscriber,\r\n  _deleteSubscribers,\r\n  setError\r\n} = subscribersSlice.actions;\r\nexport const { selectAll, selectById } = subscribersAdapter.getSelectors(\r\n  (state) => state.subscribers\r\n);\r\n\r\nexport default subscribersSlice.reducer;\r\n","import { createEntityAdapter, createSlice } from \"@reduxjs/toolkit\";\r\nimport { fetchData } from \"../../features/makeAirtableRequest\";\r\nconst fetchMails = fetchData(\"mails\");\r\n\r\nconst mailsAdapter = createEntityAdapter({\r\n   sortComparer: (a, b) => a.createdTime.localeCompare(b.createdTime)\r\n});\r\nconst initialState = mailsAdapter.getInitialState({\r\n   status: \"iddle\",\r\n   error: null,\r\n   openModal: false\r\n})\r\nconst mailsSlice = createSlice({\r\n   name: \"mails\",\r\n   initialState,\r\n   reducers: {\r\n      updateMail: (state, { payload: { id, ...rest } }) => mailsAdapter.updateOne(state, {\r\n         id,\r\n         changes: { ...rest }\r\n      }),\r\n      deleteMails: (state, { payload }) => mailsAdapter.removeMany(state, payload),\r\n      addMail: (state, { payload }) => mailsAdapter.addOne(state, payload),\r\n      setStatusMails: (state, { payload }) => { state.status = payload },\r\n      setStatusEditor: (state, { payload }) => { state.openModal = payload }\r\n   },\r\n   extraReducers: {\r\n      [fetchMails.pending]: state => { state.status = \"pending\" },\r\n      [fetchMails.fulfilled]: (state, { payload }) => {\r\n         state.status = \"iddle\";\r\n         mailsAdapter.setAll(state, payload);\r\n      },\r\n      [fetchMails.rejected]: (state, { error }) => {\r\n         state.status = \"failed\";\r\n         state.error = error.message;\r\n      }\r\n   }\r\n});\r\n\r\nexport default mailsSlice.reducer;\r\nexport const { updateMail, deleteMails, setStatusMails, setStatusEditor, addMail } = mailsSlice.actions;\r\nexport const {\r\n   selectAll: selectAllMails,\r\n   selectById: selectMailById\r\n} = mailsAdapter.getSelectors(state => state.mails);","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst snackBarSlice = createSlice({\r\n   name: \"snackBar\",\r\n   initialState: {\r\n      open: false,\r\n      message: \"\"\r\n   },\r\n   reducers: {\r\n      showSnack: (state, { payload }) => {\r\n         state.open = true;\r\n         state.message = payload;\r\n      },\r\n      hideSnack: state => { state.open = false }\r\n\r\n   }\r\n});\r\n\r\nexport default snackBarSlice.reducer;\r\nexport const { showSnack, hideSnack } = snackBarSlice.actions;","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport subscribersReducer from './pages/subscribers/subscribersSlice';\r\nimport mailsReducer from './pages/mails/mailsSlice';\r\nimport snackReducer from './components/snackBars/snackBarSlice';\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    subscribers: subscribersReducer,\r\n    mails: mailsReducer,\r\n    snackBar: snackReducer\r\n  }\r\n});","import { styled, TextField as MuiTextField } from '@mui/material';\r\nimport { useController } from 'react-hook-form';\r\n\r\nexport const TextField = styled(({ name, control, rules, ...rest }) => {\r\n   const { field:\r\n      { ref, onChange, onBlur, value },\r\n      fieldState:\r\n      { invalid, error }\r\n   } = useController({ name, control, rules, defaultValue: \"\" });\r\n   return <MuiTextField {...rest}\r\n      name={name}\r\n      value={value}\r\n      // required\r\n      size=\"small\"\r\n      label={name}\r\n      error={invalid}\r\n      helperText={invalid && error.message}\r\n      inputRef={ref}\r\n      inputProps={{ ...onBlur, onChange }}\r\n   />\r\n})(({ theme }) => {\r\n   // console.log(\"theme: \", theme);\r\n   return {\r\n      margin: theme.spacing(1)\r\n   }\r\n});","// import { connect, useSelector } from \"react-redux\";\r\nimport api from \"../api\";\r\n// import { selectAll } from \"../pages/subscribers/subscribersSlice\";\r\n// import { mailText } from \"./mailContent\";\r\n\r\nconst defaultConfig = {\r\n   url: \"https://en94ayn8crcmn4i.m.pipedream.net\",\r\n   // headers: {\r\n   //    Authorization: \"...\",\r\n   // },\r\n}\r\n\r\nexport const sendMail = (subscribers, mail) => {\r\n   const sendTo = subscribers.map(subscr => {\r\n      const data = {\r\n         from: \"exitedUser@sandbox9a593161d9ef4be5b0bb14cf2696733a.mailgun.org\",\r\n         to: subscr.email,\r\n         subject: mail.subject,\r\n         text: mail.content.replace(\"<name>\", subscr.name)\r\n      };\r\n      defaultConfig.data = data;\r\n      return api.post(defaultConfig).then((data) => data);\r\n   });\r\n   return Promise.allSettled(sendTo)\r\n      .then(res => {\r\n         console.log(res);\r\n         return res;\r\n      });\r\n}\r\n","import store from './store';\r\nimport { addItem, deleteItems, update } from './features/makeAirtableRequest';\r\nimport { addMail, deleteMails, setStatusMails, updateMail } from './pages/mails/mailsSlice';\r\nimport { setStatusSubscr, updateSubscriber, _addSubscriber, _deleteSubscribers } from './pages/subscribers/subscribersSlice';\r\nimport { sendMail } from './features/makeMailgunRequest';\r\nimport { showSnack } from './components/snackBars/snackBarSlice';\r\nconst dispatch = store.dispatch;\r\n\r\nexport const handleUpdate = (type) => (id, data) => {\r\n   dispatch(type === \"subscribers\" ? setStatusSubscr(\"pending\") : setStatusMails(\"pending\"));\r\n   return update(type)(id, data)\r\n      .then((data) => {\r\n         console.log(data);\r\n         dispatch(type === \"subscribers\" ? updateSubscriber(data) : updateMail(data));\r\n      })\r\n      .finally(() => dispatch(type === \"subscribers\" ? setStatusSubscr(\"iddle\") : setStatusMails(\"iddle\"))\r\n      );\r\n};\r\n\r\nexport const handleDelSelected = (type) => itemsID => {\r\n   if (!itemsID.length) {\r\n      alert(\"Neither item is't selected\");\r\n      return undefined;\r\n   }\r\n   if (!confirm(\"Are You sure to delete selected items?!.\")) { return undefined }\r\n   dispatch(type === \"subscribers\" ? setStatusSubscr(\"pending\") : setStatusMails(\"pending\"));\r\n   deleteItems(type)(itemsID)\r\n      .then((data) =>\r\n         dispatch(type === \"subscribers\" ? _deleteSubscribers(data.map((subsc) => subsc.id))\r\n            :\r\n            deleteMails(data.map(mail => mail.id)))\r\n      )\r\n      .finally(() => dispatch(type === \"subscribers\" ? setStatusSubscr(\"iddle\") : setStatusMails(\"iddle\")));\r\n};\r\n\r\nexport const handleAdd = type => data => {\r\n   dispatch(setStatusSubscr(\"pending\"));\r\n   return addItem(type)(data)\r\n      .then(data => {\r\n         dispatch(type === \"subscribers\" ? _addSubscriber(data) : addMail(data));\r\n         return data.id;\r\n      })\r\n      .finally(() => dispatch(setStatusSubscr(\"iddle\")));\r\n}\r\n\r\nexport const handleSend = (mailToSend, selectedSubscr) => {\r\n   if (!mailToSend) {\r\n      const { mails } = store.getState();\r\n      mailToSend = Object.values(mails.entities).find(subscr => subscr.fields.status === \"toSend\");\r\n      if (!mailToSend) {\r\n         alert(\"Neither mail is't selected\");\r\n         return undefined;\r\n      }\r\n   }\r\n   if (!selectedSubscr?.length) {\r\n      const { subscribers } = store.getState();\r\n      selectedSubscr = Object.values(subscribers.entities).filter(subscr => subscr.fields.selected);\r\n      if (!selectedSubscr?.length) {\r\n         alert(\"Neither subscriber is't selected\");\r\n         return undefined;\r\n      }\r\n   }\r\n   dispatch(setStatusSubscr(\"pending\"));\r\n   sendMail(selectedSubscr.map(subscr => subscr.fields), mailToSend.fields)\r\n      .then(resSent => {\r\n         const sentTo = selectedSubscr.filter((_, num) => resSent[num].status === 'fulfilled')\r\n            .map(subscr => subscr.fields.name).join(\", \");\r\n         const dontSentTo = selectedSubscr.filter((_, num) => resSent[num].status === 'rejected')\r\n            .map(subscr => subscr.fields.name).join(\", \");\r\n         if (sentTo) {\r\n            dispatch(showSnack(`E-mail was sent to: ${sentTo}`));\r\n            handleUpdate(\"mails\")(mailToSend.id, { status: \"sent\" });\r\n         }\r\n         if (dontSentTo) dispatch(showSnack(`Dont sent to ${dontSentTo}`));\r\n      })\r\n      .finally(() => dispatch(setStatusSubscr(\"iddle\")));\r\n}\r\n","import { IconButton, Menu, MenuItem, Tooltip } from '@mui/material';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport { useState } from 'react';\r\nimport { handleDelSelected, handleSend } from '../../../handlers';\r\nexport default function MenuSubscribers({ selSubscr }) {\r\n   const [open, setOpen] = useState(null);\r\n   const handleMenu = ({ currentTarget }) => setOpen(currentTarget);\r\n   const handleDelete = () => {\r\n      setOpen(null);\r\n      handleDelSelected(\"subscribers\")(selSubscr.map(subscr => subscr.id));\r\n   }\r\n   const _handleSend = () => {\r\n      setOpen(null);\r\n      handleSend(null, selSubscr);\r\n   }\r\n   return <>\r\n      <Tooltip title=\"Menu\">\r\n         <IconButton onClick={handleMenu}>\r\n            <MenuIcon fontSize='large' />\r\n         </IconButton>\r\n      </Tooltip>\r\n      <Menu open={!!open} anchorEl={open} onClose={() => setOpen(null)}>\r\n         <MenuItem dense key=\"delete\" children=\"Delete selected\" onClick={handleDelete} />\r\n         <MenuItem dense key=\"send mail\" children=\"Send mail to selected\" onClick={_handleSend} />\r\n      </Menu>\r\n\r\n   </>\r\n}\r\n","import { ListItem, Skeleton, Avatar, Box } from \"@mui/material\";\r\nimport { memo } from \"react\";\r\n\r\nfunction SubscribersSkeleton() {\r\n   return (\r\n      <>\r\n         {new Array(Math.floor(Math.random() * 7 + 3)).fill(null).map((elem, index) =>\r\n            <ListItem key={index}>\r\n               <Skeleton variant=\"circular\" children={<Avatar />} />\r\n               <Box sx={{ flexGrow: 1, ml: 2, maxWidth: `${Math.random() * 40 + 30}%` }}>\r\n                  <Skeleton width=\"40%\" />\r\n                  <Skeleton />\r\n               </Box>\r\n            </ListItem>)}\r\n      </>\r\n   );\r\n}\r\n\r\nexport default memo(SubscribersSkeleton);\r\n","import { Button, IconButton, Modal, Paper, Stack, Zoom } from \"@mui/material\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { connect } from 'react-redux';\r\nimport { TextField } from './subscribers/elements';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport { handleAdd, handleSend, handleUpdate } from '../handlers';\r\nimport { setStatusEditor } from \"../pages/mails/mailsSlice\";\r\nimport { useEffect } from \"react\";\r\n\r\nfunction MailEditor({ openModal, subject, content, id, setStatusEditor }) {\r\n   const { control, handleSubmit, reset } = useForm({\r\n      defaultValues: {\r\n         subject, content\r\n      },\r\n      mode: \"all\"\r\n   });\r\n   useEffect(() => reset({ subject, content }), [openModal]);\r\n\r\n   const onSubmit = async (data, { target: { innerText } }) => {\r\n      console.log(data, innerText);\r\n      id ? await handleUpdate(\"mails\")(id, { ...data, status: \"toSend\" }) :\r\n         await handleAdd(\"mails\")({ ...data, status: \"toSend\" })\r\n            .then(respID => id = respID);\r\n      if (innerText !== \"SAVE\") {\r\n         handleSend({ id, fields: data });\r\n      }\r\n      setStatusEditor(false);\r\n   }\r\n\r\n   return (\r\n      <Modal open={!!openModal}\r\n         hideBackdrop\r\n         sx={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            backdropFilter: \"blur(2px)\"\r\n         }}\r\n      >\r\n         <Zoom in={!!openModal} timeout={800}>\r\n            <Paper sx={{\r\n               p: 2,\r\n               pt: 5,\r\n               display: \"flex\",\r\n               flexDirection: \"column\",\r\n               width: \"70%\",\r\n               maxWidth: \"95%\",\r\n               position: \"relative\"\r\n            }}>\r\n               <IconButton\r\n                  onClick={() => setStatusEditor(false)}\r\n                  sx={{ position: \"absolute\", top: 0, right: 0 }}\r\n               >\r\n                  <CloseIcon />\r\n               </IconButton>\r\n               <TextField\r\n                  name=\"subject\"\r\n                  control={control}\r\n               />\r\n               <TextField\r\n                  name=\"content\"\r\n                  multiline\r\n                  minRows={3}\r\n                  maxRows={6}\r\n                  required\r\n                  control={control}\r\n                  rules={{\r\n                     required: \"This field must be filled\",\r\n                     validate: val => Boolean(val.replace(/\\n/g, \"\")) || \"This field must be filled\"\r\n                  }}\r\n               />\r\n               <Stack direction={\"row\"} spacing={3}>\r\n                  <Button children=\"save & send\" onClick={handleSubmit(onSubmit)} />\r\n                  <Button children=\"save\" onClick={handleSubmit(onSubmit)} />\r\n               </Stack>\r\n            </Paper>\r\n         </Zoom>\r\n      </Modal>\r\n   )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n   const { openModal } = state.mails;\r\n   const { subject, content } = openModal;\r\n   return ({\r\n      subject: openModal ? subject : \"\",\r\n      content: openModal ? content : \"\",\r\n      id: openModal?.id,\r\n      openModal: Boolean(openModal)\r\n   });\r\n}\r\nexport default connect(mapStateToProps, { setStatusEditor })(MailEditor);","import { Snackbar as MUISnackBar } from '@mui/material';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { hideSnack } from './snackBarSlice';\r\n\r\nconst SnackBar = () => {\r\n   const { open, message } = useSelector(state => state.snackBar);\r\n   const dispatch = useDispatch();\r\n   return <MUISnackBar\r\n      open={open}\r\n      message={message}\r\n      key={message}\r\n      transitionDuration={1000}\r\n      autoHideDuration={5000}\r\n      anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\r\n      onClose={() => dispatch(hideSnack())}\r\n   />\r\n}\r\n\r\nexport default SnackBar;","import { Backdrop, CircularProgress } from \"@mui/material\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { NavLink, Outlet } from \"react-router-dom\";\r\nimport MailEditor from '../mailEditor';\r\nimport SnackBar from \"../snackBars\";\r\n\r\nexport default function Dashboard() {\r\n   const pendingSubscr = useSelector(state => state.subscribers.status);\r\n   const pendingMails = useSelector(state => state.mails.status);\r\n   return <div className=\"dashboard\">\r\n      <nav>\r\n         <NavLink to=\"/subscribers\">Subscribers</NavLink>\r\n         <NavLink to=\"mails\">E-mails</NavLink>\r\n      </nav>\r\n      <hr />\r\n      <SnackBar />\r\n      <Outlet />\r\n      <Backdrop\r\n         children={<CircularProgress />}\r\n         open={pendingSubscr === \"pending\" || pendingMails === \"pending\"}\r\n         invisible\r\n         sx={{ zIndex: 1301, }}\r\n      />\r\n      <MailEditor />\r\n   </div>\r\n}","import { Button, CircularProgress, Paper } from \"@mui/material\";\r\nimport AddIcon from \"@mui/icons-material/Send\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport validator from \"validator\";\r\nimport { _addSubscriber } from \"../../pages/subscribers/subscribersSlice\";\r\nimport { memo } from 'react';\r\nimport { TextField } from './elements';\r\nimport { handleAdd } from \"../../handlers\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { showSnack } from \"../snackBars/snackBarSlice\";\r\n\r\nfunction AddSubscriber() {\r\n  const dispatch = useDispatch();\r\n  const {\r\n    handleSubmit,\r\n    formState: { isSubmitting },\r\n    reset,\r\n    control\r\n  } = useForm({\r\n    mode: \"all\"\r\n  });\r\n  const onSubmit = async (data) => {\r\n    await handleAdd(\"subscribers\")(data)\r\n      .then(() => {\r\n        reset();\r\n        dispatch(showSnack(\"Subscriber has been added successfully!\"));\r\n      });\r\n  };\r\n  return (\r\n    <Paper sx={{ p: 2 }}>\r\n      <form onSubmit={handleSubmit(onSubmit)} noValidate>\r\n        <TextField\r\n          name=\"name\"\r\n          required\r\n          control={control}\r\n          rules={{ required: \"Name is required!\" }} />\r\n        <TextField\r\n          name=\"email\"\r\n          required\r\n          control={control}\r\n          rules={{ required: \"E-mail is required!\", validate: (val) => validator.isEmail(val) || \"Wrong E-mail format\" }}\r\n        />\r\n        <Button\r\n          variant=\"outlined\"\r\n          type=\"submit\"\r\n          children=\"Add\"\r\n          endIcon={isSubmitting ? <CircularProgress size={15} /> : <AddIcon />}\r\n          size=\"small\"\r\n          sx={{ ml: 8 }}\r\n        />\r\n      </form>\r\n    </Paper>\r\n  );\r\n}\r\n\r\nexport default memo(AddSubscriber);\r\n","import { Checkbox, Tooltip } from \"@mui/material\";\r\nimport { useState } from \"react\";\r\nimport { handleUpdate } from \"../../../handlers\";\r\n\r\nconst CheckAll = ({ name, ids }) => {\r\n   const [status, setStatus] = useState(\"indeterminate\");\r\n   const handleChange = () => {\r\n      const checked = status !== \"checked\";\r\n      const promises = ids.map(itemId => handleUpdate(name)(itemId, { selected: checked }));\r\n      Promise.all(promises)\r\n         .then(() => setStatus(prev => prev !== \"checked\" ? \"checked\" : \"unchecked\"));\r\n   }\r\n   return <Tooltip\r\n      title={status === \"checked\" ? \"Unselect all\" : \"Select all\"}\r\n   >\r\n      <Checkbox\r\n         indeterminate={status === \"indeterminate\"}\r\n         checked={status === \"checked\"}\r\n         color=\"default\"\r\n         onChange={handleChange}\r\n      />\r\n   </Tooltip>\r\n}\r\n\r\nexport default CheckAll;","import { IconButton, Tooltip } from \"@mui/material\";\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport { handleDelSelected } from \"../../../handlers\";\r\n\r\nexport default function Trash({ mails }) {\r\n   const selectedMails = mails.filter(mail => mail.fields.selected);\r\n   return (\r\n      <Tooltip title=\"Delete selected\">\r\n         <IconButton onClick={() => handleDelSelected(\"mails\")(selectedMails.map(mail => mail.id))}>\r\n            <DeleteIcon />\r\n         </IconButton>\r\n      </Tooltip>\r\n   )\r\n}","import { ListItem, Skeleton, Box } from \"@mui/material\";\r\nimport { memo } from \"react\";\r\n\r\nfunction MailsSkeleton() {\r\n   return (\r\n      <>\r\n         {new Array(Math.floor(Math.random() * 5 + 3)).fill(null).map((elem, index) =>\r\n            <ListItem key={index}>\r\n               <Box\r\n                  sx={{ display: \"flex\", flexDirection: \"column\", flexGrow: 1, alignItems: \"flex-start\", ml: 7 }}\r\n               >\r\n                  <Skeleton width={Math.random() * 40 + 20 + \"%\"} component=\"div\" />\r\n                  <Skeleton variant=\"rectangular\" width=\"70%\" height={30} component=\"div\" />\r\n               </Box>\r\n               <Skeleton variant=\"rectangular\" width={20} height={20} sx={{ mr: 2 }} />\r\n               <Skeleton variant=\"rectangular\" width={20} height={20} />\r\n            </ListItem>)}\r\n      </>\r\n   );\r\n}\r\n\r\nexport default memo(MailsSkeleton);","import {\r\n  ListItem, ListItemButton, ListItemAvatar,\r\n  ListItemText, Checkbox, Avatar\r\n} from \"@mui/material\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { handleUpdate } from \"../../../handlers\";\r\nimport { memo } from 'react';\r\n\r\nfunction Subscriber({\r\n  id,\r\n  num,\r\n  arr,\r\n  email,\r\n  name,\r\n  selected,\r\n}) {\r\n  const { status } = useSelector(state => state.subscribers);\r\n\r\n  return (\r\n    <>\r\n      <ListItem\r\n        key={id}\r\n        alignItems='flex-start'\r\n        divider={num !== arr.length - 1}\r\n        secondaryAction={<Checkbox\r\n          edge=\"end\"\r\n          checked={!!selected}\r\n          disabled={status === \"pending\"}\r\n          onChange={() => handleUpdate(\"subscribers\")(id, { selected: !selected })}\r\n        />}\r\n        dense\r\n        disablePadding\r\n      >\r\n        <ListItemButton onClick={() => handleUpdate(\"subscribers\")(id, { selected: !selected })}>\r\n          <ListItemText sx={{ maxWidth: 25 }} children={<h3>{num + 1}. </h3>} />\r\n          <ListItemAvatar children={<Avatar>{name.at(0).toUpperCase()}</Avatar>} />\r\n          <ListItemText primary={name} secondary={email} />\r\n        </ListItemButton>\r\n      </ListItem>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default memo(Subscriber);\r\n","import { Paper, List, ListSubheader, Box } from '@mui/material';\r\nimport { MenuSubscribers, SubscribersSkeleton } from './elements';\r\nimport { CheckAll } from '../mails/elements';\r\nimport Subscriber from './singleSubscriber';\r\nimport { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { fetchData } from '../../features/makeAirtableRequest';\r\nimport { selectAll } from \"../../pages/subscribers/subscribersSlice\";\r\n\r\nconst SubscribersList = () => {\r\n   const { status } = useSelector(state => state.subscribers);\r\n   const dispatch = useDispatch();\r\n   useEffect(() => {\r\n      if (status === \"iddle\") {\r\n         dispatch(fetchData(\"subscribers\")());\r\n      }\r\n   }, []); //eslint-disable-line\r\n   const subscribers = useSelector(selectAll);\r\n   return (\r\n      <Paper sx={{ maxWidth: 500, width: \"100%\" }}>\r\n         <List dense>\r\n            <ListSubheader sx={{ display: \"flex\" }}>\r\n               <MenuSubscribers selSubscr={subscribers.filter(subscr => subscr.fields.selected)} />\r\n               <Box children=\"Subscribers\" component=\"span\" sx={{ flexGrow: 1 }} />\r\n               <CheckAll name=\"subscribers\" ids={subscribers.map(subscr => subscr.id)} />\r\n            </ListSubheader>\r\n            {!subscribers.length && status === \"pending\" ? <SubscribersSkeleton /> :\r\n               subscribers.map(({ id, fields }, num, arr) =>\r\n                  <Subscriber key={id} {...{ ...fields, num, arr, id }} />)\r\n            }\r\n         </List>\r\n      </Paper>\r\n   )\r\n}\r\n\r\nexport default SubscribersList;","import { Edit, AddCircleOutline } from \"@mui/icons-material\";\r\nimport { Button, Card, CardActions, CardContent, CardHeader, IconButton, Tooltip } from \"@mui/material\";\r\nimport { memo } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setStatusEditor } from '../../pages/mails/mailsSlice';\r\n\r\nfunction MailToSend({ subject, content, id }) {\r\n   const dispatch = useDispatch();\r\n   return (\r\n      <Card sx={{\r\n         p: 2,\r\n         alignSelf: \"start\",\r\n         width: 200,\r\n         // textOverflow: \"ellipsis\"\r\n\r\n      }}>\r\n         <CardHeader\r\n            title=\"Mail to send\"\r\n            titleTypographyProps={{\r\n               variant: \"body1\"\r\n            }}\r\n            subheader={subject ? subject : \"...\"}\r\n            subheaderTypographyProps={{}}\r\n         />\r\n         <CardContent sx={{\r\n            overflow: \"hidden\",\r\n            whiteSpace: \"nowrap\",\r\n            textOverflow: \"ellipsis\"\r\n         }}>\r\n            {content ? content : \"...\"}\r\n         </CardContent>\r\n         <CardActions>\r\n            <Tooltip\r\n               title=\"Show / edit\"\r\n               children={<span>\r\n                  <IconButton\r\n                     children={<Edit color={id ? \"primary\" : \"default\"} />}\r\n                     disabled={!id}\r\n                     onClick={() => dispatch(setStatusEditor({ subject, content, id }))}\r\n                  />\r\n               </span>}\r\n            />\r\n            <Tooltip\r\n               title=\"Create new\"\r\n               children={<span>\r\n                  <IconButton\r\n                     children={<AddCircleOutline color=\"primary\" />}\r\n                     onClick={() => dispatch(setStatusEditor(true))}\r\n                  />\r\n               </span>}\r\n            />\r\n         </CardActions>\r\n      </Card>\r\n   )\r\n}\r\n\r\nexport default memo(MailToSend);","import { useState } from 'react';\r\nimport { useSelector } from \"react-redux\";\r\nimport { AddSubscriber, SubscribersList } from \"../../components/subscribers\";\r\nimport { selectAllMails } from \"../mails/mailsSlice\";\r\nimport { Box, IconButton, Collapse, Stack } from \"@mui/material\";\r\nimport { ExpandMore, ExpandLess } from '@mui/icons-material';\r\nimport MailToSend from '../../components/mails/mailToSend';\r\n\r\nfunction Subscribers() {\r\n  const mailToSend = useSelector(selectAllMails).find(mail => mail.fields.status === \"toSend\");\r\n  const [openCollapse, setOpenCollapse] = useState(false);\r\n\r\n  return (\r\n    <Box sx={{ display: 'flex', flexDirection: \"column\", alignItems: \"center\" }}>\r\n      <Box sx={{ width: \"70%\", my: 2 }}>\r\n        <span>Enter a new subscriber</span>\r\n        <IconButton onClick={() => setOpenCollapse(!openCollapse)}>\r\n          {!openCollapse ? <ExpandMore /> : <ExpandLess />}\r\n        </IconButton>\r\n        <Collapse in={openCollapse}>\r\n          <AddSubscriber />\r\n        </Collapse>\r\n      </Box>\r\n      <Stack direction=\"row\" spacing={5}>\r\n        <SubscribersList />\r\n        {mailToSend ? <MailToSend {...{ ...mailToSend.fields, id: mailToSend.id }} /> :\r\n          <MailToSend />\r\n        }\r\n      </Stack>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default Subscribers;\r\n","import { ForwardToInboxOutlined, Edit } from \"@mui/icons-material\";\r\nimport { Box, Checkbox, IconButton, ListItem, ListItemButton, ListItemText, Tooltip } from \"@mui/material\";\r\nimport { memo } from 'react';\r\nimport { handleUpdate, handleSend } from '../../handlers';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setStatusEditor } from \"../../pages/mails/mailsSlice\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst SingleMail = ({ subject, content, selected, id, status: mailStatus }) => {\r\n   const { status } = useSelector(state => state.mails);\r\n   const dispatch = useDispatch();\r\n   const navigate = useNavigate();\r\n   const handleClickSend = () => {\r\n      handleSend({ id, fields: { subject, content } });\r\n      navigate(\"/subscribers\", { replace: true });\r\n   }\r\n   return <>\r\n      <ListItem\r\n         secondaryAction={<Box>\r\n            {(mailStatus !== \"sent\") && <Tooltip\r\n               title=\"Edit mail\"\r\n               children={<IconButton\r\n                  children={<Edit />}\r\n                  onClick={() => dispatch(setStatusEditor({ subject, content, id }))}\r\n               />}\r\n            />}\r\n            <Tooltip\r\n               title=\"Send to selected subscribers\"\r\n               children={<IconButton\r\n                  children={<ForwardToInboxOutlined />}\r\n                  onClick={handleClickSend}\r\n               />}\r\n            />\r\n         </Box>}\r\n      >\r\n         <ListItemButton onClick={() => handleUpdate(\"mails\")(id, { selected: !selected })}>\r\n            <Checkbox\r\n               checked={!!selected}\r\n               disabled={status === \"pending\"}\r\n               onClick={() => handleUpdate(\"mails\")(id, { selected: !selected })}\r\n            />\r\n            <ListItemText primary={subject} secondary={content} />\r\n         </ListItemButton>\r\n      </ListItem>\r\n   </>\r\n}\r\n\r\nexport default memo(SingleMail);","import { Paper, List, ListSubheader, Box } from '@mui/material';\r\nimport { Trash, MailsSkeleton, CheckAll } from './elements';\r\nimport SingleMail from './singleMail';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst MailsList = ({ title, mails }) => {\r\n   const { status } = useSelector(state => state.mails);\r\n   return (\r\n      <Paper sx={{ width: \"100%\", maxWidth: 500 }}>\r\n         <List dense>\r\n            <ListSubheader sx={{ display: \"flex\" }}>\r\n               <CheckAll name=\"mails\" ids={mails.map(mail => mail.id)} />\r\n               <Trash mails={mails} />\r\n               <Box component=\"span\" sx={{ flexGrow: 1 }}>\r\n                  {title}\r\n               </Box>\r\n            </ListSubheader>\r\n            {(!mails.length && status === \"pending\") ? <MailsSkeleton /> :\r\n               mails.map(({ id, fields }) =>\r\n                  <SingleMail key={id} {...{ ...fields, id }} />)\r\n            }\r\n         </List>\r\n      </Paper>\r\n   )\r\n}\r\n\r\nexport default MailsList;","import { Stack } from \"@mui/material\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectAllMails } from \"./mailsSlice\";\r\nimport MailsList from '../../components/mails/mailsList';\r\n\r\nconst Mails = () => {\r\n   const mails = useSelector(selectAllMails);\r\n   return (\r\n      <Stack direction=\"row\" spacing={5} paddingX={5}>\r\n         <MailsList\r\n            title=\"Working direktory\"\r\n            mails={mails.filter(mail => mail.fields.status !== \"sent\")}\r\n         />\r\n         <MailsList\r\n            title=\"Sent mails\"\r\n            mails={mails.filter(mail => mail.fields.status === \"sent\")}\r\n         />\r\n      </Stack>\r\n   )\r\n}\r\n\r\nexport default Mails;","import { Navigate, Route, Routes } from \"react-router-dom\";\r\nimport Dashboard from \"./components/dashboard\";\r\nimport { Subscribers, Mails } from './pages';\r\nimport \"./styles.css\";\r\n\r\nexport default function App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Routes>\r\n        <Route path=\"/\" element={<Dashboard />}>\r\n          <Route path=\"/\" index element={<Navigate to=\"subscribers\" />} />\r\n          <Route path=\"subscribers\" element={<Subscribers />} />\r\n          <Route path=\"mails\" element={<Mails />} />\r\n        </Route>\r\n      </Routes>\r\n    </div>\r\n  );\r\n}\r\n","import { StrictMode } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport App from \"./App\";\r\nimport { fetchData } from \"./features/makeAirtableRequest\";\r\n\r\nif (process.env.NODE_ENV === \"development\") {\r\n  const { worker } = require(\"./mocks/browser\");\r\n  worker.start();\r\n}\r\nstore.dispatch(fetchData(\"mails\")());\r\nconst rootElement = document.getElementById(\"root\");\r\nReactDOM.render(\r\n  <StrictMode>\r\n    <Provider store={store}>\r\n      <BrowserRouter>\r\n        <App />\r\n      </BrowserRouter>\r\n    </Provider>\r\n  </StrictMode>,\r\n  rootElement\r\n);\r\n"],"sourceRoot":""}